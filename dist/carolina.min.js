"use strict";!function(n){if(!("webkitSpeechRecognition"in window))return void l("warn","Your browser is not support webkit speech recognition!");var e=new webkitSpeechRecognition,t=!1,o={toString:function(){var n="\n";return Object.keys(this).map(function(e,t,o){"toString"!==e&&(n+=e+" => "+this[e],t!==o.length-1&&(n+="\n"))}.bind(this)),n}},r=!1,i=0,c=!1,u="",a=function(){return!!t||(l("error","You must initailzied carolina.js `carolina.init(options)`"),!1)},s=function(n){return u=n,this},d=function(n){return c=n,this},l=function(n,e){if("function"!=typeof console[n])return void console.error("Trying to you console log with unknown console type => ",n);if("debug"!==n||r){for(var t=arguments.length,o=Array(t>2?t-2:0),i=2;i<t;i++)o[i-2]=arguments[i];if(Array.isArray(o)&&o.length>0)return void console[n]("CAROLINA::"+e,o);console[n]("CAROLINA::"+e)}},f=function(n){var e,t;return{start:function(){e=new Date},end:function(){t=new Date;var o=t.getTime()-e.getTime();l("debug",n+" took "+o+" ms to execute")}}},g=function(n){var e=o.callbacks;if(!e)return void l("debug","There is no configured callbacks!");if(!e[n])return void l("debug","There is no callback configured for callback name => ",n);for(var t=arguments.length,r=Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];e[n].apply(e.context,r)},h=function(n){var e="",t=new f("ON_RESULT");t.start();for(var r=n.resultIndex;r<n.results.length;++r){var i=n.results[r][0].transcript,c=n.results[r][0].confidence;if(o.quality!==Math.round(c))return void l("warn","The transcript we got is not confidence enough due to your quality restrictions. ",i);n.results[r].isFinal?(u+=i,l("debug","Recevied new chunk transcript from user speaking text value & confidence => ",i,c),g("onChunkStream",i)):(e+=i,l("debug","Interim transcript current speaking value => ",e),g("onInterimTranscript",e))}u=u,l("debug","Live stream of transcript => ",u),g("onLiveStream",u),t.end()},b=function(){d(!0),l("debug","Start listening... "),g("onStart")},p=function(n){i++,d(!1),l("error","An error been occured => ",n),g("onError",n)},v=function(n){d(!1),s(""),l("info","Stop listening... "),g("onEnd",n)},y=function(n){l("debug","Sound recognisable speech or not has been detected"),g("onSoundStart",n)},S=function(n){l("debug","Speech recognition service returns a final result with no significant recognition. This may involve some degree of recognition, which doesnt meet or exceed the confidence threshold."),g("onNoMatch",n)},m=function(n){l("debug","Any sound recognisable speech or not has stopped being detected."),g("onSoundEnd",n)},w=function(n){l("debug","A sound that is recognised by the speech recognition service as speech has been detected."),g("onSpeechStart",n)},k=function(n){l("debug","Speech recognised by the speech recognition service has stopped being detected."),g("onSpeechEnd",n)},O={start:function(){e.start()},abort:function(){e.abort()},stop:function(){e.stop()},clearStream:function(){s("")},doctor:function(){var n="Library Status Health\ndebug mode is "+(r?"ON":"OFF")+" \nconfiguration details are: "+o.toString()+"\nlibrary health condition "+(i>3?"POOR":"GOOD")+"\nquality of speaking "+(1===o.quality?"GOOD":"POOR");l("info",n)},isListening:function(){return c}};e.onstart=b,e.onresult=h,e.onerror=p,e.onend=v,e.onnomatch=S,e.onsoundstart=y,e.onsoundend=m,e.onspeechstart=w,e.onspeechend=k,n.Carolina={init:function(n){if(t)return void l("error","You can init only once");t=!0,o=Object.assign({},o,{lang:n.lang||"en-US",debug:n.debug||!1,quality:n.quality||1,callbacks:n.callbacks}),r="boolean"==typeof n.debug&&n.debug,e.lang=o.lang,e.continuous=o.continuous||!1,e.interimResults=o.interimResults||!1},fn:function(n){if(a()){if("function"!=typeof O[n])return void l("error","You try to invoke invalid method => ",n);var e;try{for(var t=arguments.length,o=Array(t>1?t-1:0),r=1;r<t;r++)o[r-1]=arguments[r];e=O[n].apply(this,o)}catch(n){l("error","You have been encounter api function exception => ",n)}return e}}}}(window);